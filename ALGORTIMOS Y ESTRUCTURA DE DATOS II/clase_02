#-Equivalencias-#
a=3
print(a)
a+=5 #a=a+5
print(a)

b=5
b/=5 #b=b/5
print(b)

#-Utilizando cadenas-#

var1="Uni"
var1+="versidad"
print(var1)

#-Concidcional While-#
#-S=1+3+5+7+...+(2n-1)-#
n=int(input("Ingrese el numero de terminos"))
cont=1
s=0

while(cont<=n):
    term=2*cont-1
    s=s+term
    cont+=1
    
print("El numero de termino {0} es: {1}".format(n,s))
print(f"La suma de terminos es:",s)


#-Break-# #Rompe todo el bucle pero continua el programa principal
cad1="Universidad"
i=0

while(i<len(cad1)):
    print(cad1[i],end=" ")
    
    if(cad1[i]=='e'):
        break
        
    i+=1

#-Continue-# #Obvia el subproceso restante pero continua el bucle
cad2="Fernando"
j=-1

while(j<len(cad2)-1):
    print(cad2[j],end=" ")
    
    j+=1
    if(cad2[j]=='r'):
        continue
        
#-Pass-# #No hace nada (implementaciones futuras)
cad3="Electronica"
k=0

while(k<=len(cad3)-1):
    if(cad3[k]=='o'):
        pass
    
    print(cad3[k],end=" ")
    k+=1
    
    
#-LIBRERIA-#
import math in mt


#-Condicional FOR-#
for i in range(1,15): #15: imprime hasta 14#
    print(i,end=" ")

print("\n") #salto de linea#

for j in range(1,31,2): #Paso x (1,31,x)#
    print(j,end=" ")


#-Listas-#
###Agrupamientos de distintos datos

l1=[]
l2=list()
print(type(l1))
print(type(l2))

l3=[18,19,"Tesla",[1,2,3],"Electronica",777]
print(l3)

print(l3[0])
print(l3[2])
print(l3[3])

#Inversa# 
##Cada elemento tiene dos posibles indices
print(l3[-1])
print(l3[-3])

#Longitud de la lista#

print(len(l3))

#Cambio de valores#
l3[2]="David"

print(l3)

#-Operadores con listas-#
#APEND

l1=[4,5,6]
l2=[2,3]

l4=l1+l2 #Union de listas#
print(l4)

l5=3*l1 #Repetecion de listas#
print(l5)

#-Agregar elementos a la lista-#
l6=["circuitos",[2,3,4],16,"electronicos"]
l6.append("2")
print(l6)

l6.append([1,4,7])
print(l6)

#INSERT
l7=[18,19,"Tesla",[1,2,3],"Electronica",777]
print(l7)
l7.insert(3,"transistor")
print(l7)

#EXTEND
l8=["oscilador",[1,2,3],"MOSFET",4004]
l8.extend([12,"5G"])
print(l8)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

#-Quitar elementos-#
##del
l1=["tecnologia","energia",5,8,["David","Evangelista"]]
print(l1)

del l1[1]
print(l1)
del l1[3]
print(l1)

##remove
#Remueve un elemento de la lista escrbiendo el elemento
l1.remove(5)
print(l1)

##pop
l2=["Fernando",3,5,["Don Gilberto","Doña Nelly"]]
print(l2)

l2.pop()
print(l2)
l2.pop()
print(l2)

l2.pop(0)
print(l2)
valor=l2.pop(0)
print(valor)

l3=["Fernando",3,5,["Don Gilberto","Doña Nelly"]]
l4=[]

l4.apend(l3.pop(3))
print(l4)

#-Referencia y copia de listas-#
l9=[23,56,"Newton",67]
print(l9)
l10=l9
print(l10)
l10.append(121212)
print(l10)
print(l9)

l9.remove("Newton")
print(l9)
print(l10)

#-Copias-#
l9=[2,3,"Cuti","David"]
print(l9)
l11=l9[:]
print(l11)
print(l9)

Lx=[4,5,6,9,12,6]
print(Lx)

for elem in Lx:
    print(elem,end=" ")
    
print("\n")

for indice in range(len(Lx)):
    print(Lx[indice],end=" ")


#-Metodo sort()-#
#-Funcion sorted()-#

#-Listas por comprension y funciones-#
#-sort, sorted-#

L=[2,45,0,12,6]
print(L)

#-sorted-#
#-ascendente-#
L1=sorted(L) 
print(L1)

#-descendente-#
L2=sorted(L,reverse=True)
print(L2)

#-sort-#
#-ascendente-#
L.sort()
print(L)

#-descendente-#
L.sort(reverse=True)
print(L)

#-Ordenamiento de palabras-#
L=["david","Zoolander","Fernando","abel"]
print(L)

L.sort()
print(L)

L.sort(reverse=True)
print(L)

L.sort(key=str.lower)
print(L)

L.sort(key=str.lower,reverse=True)
print(L)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

L=[["maria",19],["Rosa",18],["juan",14],["Benito",16],["Juan",17],["ana",18]]
print(L)
L.sort(key=lambda alumnoNota:alumnoNota[1]) #alumnoNota: variable#
print(L)

L.sort(key=lambda alumnoNombre:alumnoNombre[0])
print(L)

L.sort(key=lambda alumnoNota:alumnoNota[1],reverse=True) 
print(L)

L.sort(key=lambda alumnoNombre:alumnoNombre[0],reverse=True)
print(L)

#-Range-#
#-(Revisar)-#


#-Listas por comprension-#
L5=[[3,4,5,2],[8,6,70,7],[3,46,8,2,1],[6,4,4,3,3]]
print(L5)

for i in range(len(L5)):
    print("-->",i)
    print(L5[i])
    
print("\n\n")
for elem in L5:
    print(elem)
    
#-Comprension-#
L6=[elem for elem in L5]
print(L6)

L6=[elem[0] for elem in L5]
print(L6)
L6=[elem[3] for elem in L5]
print(L6)


L7=[i for i in range(10)] #L7=['Operacion' for i in range(10)]#
print(L7)

L7=[i for i in range(10) if i%2!=0]
print(L7)


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

#-Ejercicio 01-#
L6=[]
cont=0
c10=0
c11=0
c12=0
c13=0
c14=0
c15=0

n=int(input("Ingrese un numero entre 10 y 15: "))
if(n!=-1 and n>9 and n<16):
    L6.append(n)
    cont+=1
    
while(n!=-1):
    n=int(input("Ingrese un numero entre 10 y 15: "))
    if(n>9 and n<16):
        L6.append(n)
        cont+=1
    if(n==-1):
        break

print(L6)

for i in range(cont):
    if(L6[i]==10): 
        c10+=1
    if(L6[i]==11): 
        c11+=1
    if(L6[i]==12): 
        c12+=1
    if(L6[i]==13): 
        c13+=1
    if(L6[i]==14): 
        c14+=1
    if(L6[i]==15): 
        c15+=1

print("10: ",c10)
print("11: ",c11)
print("12: ",c12)
print("13: ",c13)
print("14: ",c14)
print("15: ",c15)


#-Ejercicio 02-#
L=[[18,15,10,6,11],[17,9,9,18,12],[15,11,14,17,13],[16,12,13,16,9]]

for i in range(5):
    print("Elementos de la columna ",i,": ")
    L2=[elem[i] for elem in L]
    print(L2)
    s=0
    for j in range(4):
        s=s+L2[j]
    
    print("Promedio de columna ",i,": ",s/4)


#-Ejercicio 03-#

A=[1,2,3,15,4]
B=[4,6,3,17]

C=A+B

print("Union de Listas")
print(C)

print("\nOrdenamiento de mayor a menor")
C.sort(reverse=True)
print(C)

print("\nOrdenamiento de menor a mayor")
C.sort()
print(C)

